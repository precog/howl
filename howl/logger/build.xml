<project default='test-report'
  xmlns:dav="antlib:org.apache.webdav.ant">
  
  <!-- $Id: build.xml,v 1.6 2005-08-12 21:22:05 girouxm Exp $ -->
  
  <!-- define properties that cannot be overridden by build.properties -->
  <property environment="env"/>
  
  <property name='src.dir' value='src'/>
  <property name='lib.src.dir' value='${src.dir}/java'/>
  <property name='test.src.dir' value='${src.dir}/test'/>
  <property name='classes.dir' value='bin'/>
  <property name='lib.classes.dir' value='${classes.dir}/java'/>
  <property name='test.classes.dir' value='${classes.dir}/test'/>
  <property name='report.dir' value='reports'/>
  <property name='doc.dir' value='doc'/>
  <property name='jdoc.dir' value='${doc.dir}/jdoc'/>
  <property name='cvs.user' value='${user.name}'/>
  <property name='cvs.site' value='howl.forge.objectweb.org'/>
  <property name='dav.site' value='https://howl.forge.objectweb.org:8002'/>
  <property name='not.in.cvs' value='/var/lib/gforge/chroot/home/groups/howl/htdocs'/>
  <property name='junit.home' value='${env.JUNIT_HOME}'/>

  <!-- load properties for local build -->
  <property file='build.properties'/>
  
  <!-- define default values for properties not found in build.properties -->
  <property name='build.compiler' value='modern'/>
  <property name='javac.source' value='1.4'/>
  <property name='delete.verbose' value='false'/>
  <property name='temp.dir' value='target/temp'/>
  
  <target name='compile-lib'
    depends='clean-lib'
    description='compile HOWL library classes'>

    <mkdir dir='${lib.classes.dir}'/>
    
    <javac
      srcdir='${lib.src.dir}'
      destdir='${lib.classes.dir}'
      source='${javac.source}'
      >
    </javac>

    <jar destfile='${classes.dir}/howl.jar'>
      <fileset dir='${lib.classes.dir}' includes='**/*.class'/>
    </jar>
  </target>
  
  <target name='compile-test'
    depends='clean-test,compile-lib'
    description='compile HOWL library JUnit test classes'>

    <mkdir dir='${test.classes.dir}'/>
    
    <javac
      srcdir='${test.src.dir}'
      destdir='${test.classes.dir}'
      source='${javac.source}'
      excludes='**/MBeanTest.java'
      >
      <classpath>
        <pathelement path='${classes.dir}/howl.jar'/>
        <pathelement location='${junit.home}/junit.jar'/> 
      </classpath>
    </javac>
    
    <jar destfile='${classes.dir}/howl-test.jar'>
      <fileset dir='${test.classes.dir}' includes='**/*.class'/>
    </jar>
  </target>
  
  <target name='clean-lib'
    description='Remove all generated files and directories for HOWL library'>
    <delete failonerror='false' verbose='${delete.verbose}'>
      <fileset dir='${lib.classes.dir}' includes='**/*.class'/>
    </delete>
  </target>
  
  <target name='clean-test'
    description='Remove all generated files and directories for JUnit test cases'>
    <delete failonerror='false' verbose='${delete.verbose}'>
      <fileset dir='${test.classes.dir}' includes='**/*.class'/>
      <fileset dir='${report.dir}' includes='**/*.*'/>
    </delete>
  </target>
  
  <target name='clean-all'
    depends='clean-lib,clean-test'
    description='Remove all generated files and directories for HOWL libarary and JUnit test cases.'>
  </target>

  <target name='compile-all'
    depends='compile-lib,compile-test'
    description='Compile HOWL library and test classes'>
  </target>
  
  <target name='test-all'
    depends='compile-all'
    description='Execute all test cases and generate test report'>

    <mkdir dir='${report.dir}'/>

    <junit
      printsummary='yes'
      fork='yes'
    >
      <classpath>
        <pathelement path='${classes.dir}/howl-test.jar'/>
        <pathelement path='${classes.dir}/howl.jar'/>
      </classpath>

      <sysproperty key="basedir" value="${basedir}"/>
        
      <formatter type='xml'/>

      <batchtest fork='yes' todir='${report.dir}'>
        <fileset dir='${test.src.dir}'>
          <include name='**/*Test.java'/>
          <exclude name='**/allTest.java'/>
          <exclude name='**/ExceptionTest.java'/> 
          <exclude name='**/MBeanTest.java'/>
        </fileset>
      </batchtest>
    </junit>
    
  </target>
  
  <target name='cvs.pwd.not.defined'>
    <fail if='cvs.pwd'>***
      SECURITY WARNING!  cvs.pwd defined.
      Junit Reports include a list of all properties.
      Including cvs.pwd in the reports is a security breach.
    </fail>
  </target>
  
  <target name='junitreport'
    description='Generate Junit Test Reports for distribution'>
    
	  <delete failonerror='false' verbose='${delete.verbose}'>
	    <fileset dir='${doc.dir}/junitreport' includes='**/*.*'/>
	  </delete>
	  
    <!-- remove cvs password from Junit Test reports -->
	  <replaceregexp match='"(cvs.user|cvs.pwd)" +value="(.*)"'
	                 replace='"\1" value=""'
	                 byline="true">
      <fileset dir="${report.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
     </replaceregexp> 
	  
	  <junitreport todir="${report.dir}" tofile='TESTS-CombinedResults.xml'>
	    <fileset dir="${report.dir}">
	      <include name="TEST-*.xml" />
	    </fileset>
	    <report format="frames"
	            todir="${doc.dir}/junitreport"
	     />
	  </junitreport>
  </target>
  
  <target name='test-report'
    depends='cvs.pwd.not.defined,clean-all,test-all,junitreport'
    description='Generate JUnit Test Reports for distribution'>
    <echo>***
      Remember to run ANT publish to push the new reports to the HOWL web site.
    </echo>
  </target>
  
  <target name='jdoc-public'
    description='Generate JavaDocs for public classes and methods'>

    <delete failonerror='false' verbose='${delete.verbose}'>
      <fileset dir='${doc.dir}/jdoc' includes='public/**/*.*'/>
    </delete>
    
    <javadoc
      source='1.4'
      access='public'
      destdir='${jdoc.dir}/public'>
      
      <fileset dir='${lib.src.dir}'>
        <include name='**/*.java'/>
      </fileset>

      <doctitle>
        <![CDATA[<h1>HOWL Logger Public API</h1>]]>
      </doctitle>
      
    </javadoc>
    
  </target>
    
	<target name='jdoc-project'
		description='Generate JavaDocs for public classes and methods'>
		
		<delete failonerror='false' verbose='${delete.verbose}'>
  		<fileset dir='${jdoc.dir}' includes='project/**/*.*'/>
		</delete>
		  
		<javadoc
			source='1.4'
      access='private'
			destdir='${jdoc.dir}/project'>
			
			<fileset dir='${lib.src.dir}'>
        <include name='**/*.java'/>
			</fileset>
			
			<doctitle>
  			<![CDATA[<h1>HOWL Logger Project API</h1>]]>
			</doctitle>
    
		</javadoc>
	  
	</target>
  
  <target name='jdoc-all'
    depends='jdoc-public,jdoc-project'
    description='Generate JavaDocs for public and project APIs'>
  </target>
  
  <target name='all-docs'
    depends='test-report,jdoc-all'
    description='Generate all java docs and Junit test reports.'>
  </target>
  
  <target name='set.cvs.pwd'>
    <!-- use -Dcvs.pwd=something command line option to eliminate prompt. -->
    <input
      message="Enter CVS Password"
      addproperty="cvs.pwd"
    />
  </target>
  
  <target name='publish'
    depends='set.cvs.pwd'
    description='Publish javadocs and test reports to the HOWL web site'
    >
    <mkdir dir='${temp.dir}'/>
    
    <delete file='${temp.dir}/**'/>
    
    <!-- collect the docs into a tar file so we only have to transfer one file -->
    <tar
      tarfile="${temp.dir}/docs.tar"
      basedir="${doc.dir}"
      includes="jdoc/**, junitreport/**"
    />
    <gzip
      zipfile="${temp.dir}/docs.tar.gz"
      src="${temp.dir}/docs.tar"
    />
    
    <!-- copy new files -->
    <scp
      todir="${cvs.user}:${cvs.pwd}@${cvs.site}:${not.in.cvs}">
      <fileset dir='${temp.dir}'>
        <include name='docs.tar.gz'/>
      </fileset>
    </scp>
    
    <!-- extract the doc files from the jar after removing existing files. -->
    <sshexec
      host='${cvs.site}'
      username='${cvs.user}'
      password='${cvs.pwd}'
      command='cd ${not.in.cvs} &amp;&amp; rm -fr jdoc junitreport &amp;&amp; tar -xzf docs.tar.gz &amp;&amp; rm -f docs.tar.gz'
    />

  </target>
  
  <target name='wdtest' 
    depends='set.cvs.pwd'
    description='test webdav'>
    <dav:lock
	    url="${dav.site}/jdoc"
	    userid='${cvs.user}'
	    password='${cvs.pwd}'
      property='locktoken'/>
    <dav:get
      url="${dav.site}"
      userid='${cvs.user}'
      password='${cvs.pwd}'
      todir="e:/tmp">
      <davfileset dir='jdoc'>
        <include name='**/*.html'/>
      </davfileset>
    </dav:get>
    <dav:unlock
      url="${dav.site}/jdoc"
      userid='${cvs.user}'
      password='${cvs.pwd}'
      property='${locktoken}'/>
  </target>
  
</project>