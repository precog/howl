/*
 * JOnAS: Java(TM) Open Application Server
 * Copyright (C) 2004 Bull S.A.
 * Contact: jonas-team@objectweb.org
 * Created on Mar 26, 2004
 */
package org.objectweb.howl.log;


/**
 * Define record types used by Logger implementations.
 * 
 * @author Michael Giroux
 */
public interface LogRecordType
{
  /**
   * Log records generated by user.
   */
  static final short USER   = 0;
  
  /**
   * Log records generated by Logger.
   * <p>must be ORed with another value to form a
   * complete control record type.
   * <p>The first nibble contains only the CTRL flag
   * to make it easy to see in file dumps.
   * The remaining three nibbles contain bits that
   * identify the specific type of control record.
   */
  static final short CTRL   = 0x4000;
  
  /**
   * Header records generated at start of every log file.
   */
  static final short FILE_HEADER = 0x0800;
  
  /**
   * Log records containing mark data.
   * 
   * <p>Data portion of the record contains the
   * current automark mode (true or false) and
   * the active mark.
   */
  static final short MARKKEY  = 0x0400;
  
  /**
   * recorded by Logger to signal a clean close on the log.
   */
  static final short CLOSE = 0x0200;
  
  /**
   * recorded by Logger to mark first block following a 
   * restart of the Logger.
   */
  static final short RESTART = 0x0100;
  
  /**
   * Type returned by get() methods to signal end of buffer.
   * 
   * <p>This record type may or may not actually exist within
   * a data buffer.  A get() method should return this
   * record type when the ByteBuffer.position() is at or beyond
   * the used bytes for the buffer.
   */
  static final short EOB = 0xE0B;
  
  /**
   * Type indicating that end of log has been reached.
   * 
   * <p>signals ReplayListener that no more records will
   * be delivered.
   */
  static final short END_OF_LOG = 0xE0F;
  
}
